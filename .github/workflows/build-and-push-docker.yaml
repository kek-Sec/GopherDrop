name: üê≥ Build and Push Docker Images

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build-backend:
    name: üõ†Ô∏è Build and Push
    runs-on: ubuntu-latest
    steps:
      - name: üöÄ Checkout Code
        uses: actions/checkout@v4

      - name: üèóÔ∏è Set Build Variables
        run: |
          echo "GIT_COMMIT_SHA=${{ github.sha }}" >> $GITHUB_ENV
          echo "GIT_VERSION=$(git describe --tags --always --long --dirty)" >> $GITHUB_ENV
          DATE_TAG=$(date +"%d%m%Y")
          echo "DATE_TAG=${DATE_TAG}" >> $GITHUB_ENV

          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "IMAGE_TAGS=latest,${DATE_TAG}" >> $GITHUB_ENV
            echo "CACHE_TO=" >> $GITHUB_ENV
          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            PR_NUMBER=${{ github.event.pull_request.number }}
            echo "IMAGE_TAGS=rc-${PR_NUMBER}-${DATE_TAG}" >> $GITHUB_ENV
            echo "CACHE_TO=type=inline" >> $GITHUB_ENV
          else
            echo "IMAGE_TAGS=unknown" >> $GITHUB_ENV
            echo "CACHE_TO=" >> $GITHUB_ENV
          fi

      - name: üõ†Ô∏è Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: üîê Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}

      - name: üì¶ Build and Push Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/kek-sec/gopherdrop:${{ env.IMAGE_TAGS }}
          annotations: |
            org.opencontainers.image.description=GopherDrop, a secure one-time secret sharing service
          build-args: |
            GIT_COMMIT_SHA=${{ env.GIT_COMMIT_SHA }}
            GIT_VERSION=${{ env.GIT_VERSION }}
            DATE_TAG=${{ env.DATE_TAG }}
          labels: |
            org.opencontainers.image.source=https://github.com/kek-sec/gopherdrop
            org.opencontainers.image.revision=${{ env.GIT_COMMIT_SHA }}
            org.opencontainers.image.version=${{ env.GIT_VERSION }}
          cache-from: type=registry,ref=ghcr.io/kek-sec/gopherdrop:latest
          cache-to: ${{ env.CACHE_TO }}
